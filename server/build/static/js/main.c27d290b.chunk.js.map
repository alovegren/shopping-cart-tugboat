{"version":3,"sources":["lib/ApiClient.js","features/cartItems/cartItems.js","components/Cart.js","components/Header.js","features/products/products.js","components/EditProductForm.js","components/ProductDetail.js","components/Product.js","components/Products.js","components/AddProductForm.js","components/App.js","serviceWorker.js","lib/store.js","index.js"],"names":["apiClient","getProducts","a","axios","get","data","createProduct","title","price","quantity","post","updateProduct","_id","put","deleteProduct","productId","delete","getCartItems","addItemToCart","product","checkout","fetchCartItems","createAsyncThunk","cartItems","newCartItem","cartItemSlice","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","_","action","payload","state","filter","item","concat","Cart","dispatch","useDispatch","useSelector","useEffect","handleCheckout","event","preventDefault","className","map","cartItem","colSpan","reduce","accum","href","onClick","Header","fetchProducts","products","newProductInput","callback","newProduct","updatedProductInput","updatedProduct","updatedProductId","productSlice","push","EditProductForm","onEditFormClick","useState","setTitle","setPrice","setQuantity","resetEditForm","handleEditProduct","for","onChange","target","value","type","id","ProductDetail","handleAddToCart","handleDeleteProduct","Product","showEditForm","setShowEditForm","toggleEditFormClick","Products","AddProductForm","showAddProduct","setShowAddProduct","addFormClass","toggleAddFormButton","resetProductForm","handleAddProduct","htmlFor","App","Boolean","window","location","hostname","match","store","configureStore","reducer","productReducer","cartItemReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c27d290b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst apiClient = {\n  getProducts: async () => {\n    const { data } = await axios.get('/api/products')\n    return data\n  },\n\n  createProduct: async ({ title, price, quantity }) => {\n    const { data } = await axios.post('/api/products', { title, price, quantity })\n    return data\n  },\n\n  updateProduct: async ({ _id, title, price, quantity }) => {\n    const { data } = await axios.put(\n      `/api/products/${_id}`,\n      { _id, title, price, quantity }\n    )\n    return data\n  },\n\n  deleteProduct: async (productId) => {\n    await axios.delete(`/api/products/${productId}`)\n  },\n\n  getCartItems: async () => {\n    const { data } = await axios.get('/api/cart')\n    return data\n  },\n\n  addItemToCart: async (product) => {\n    const { data } = await axios.post('/api/add-to-cart', product)\n    return data\n  },\n\n  checkout: async () => {\n    await axios.post('api/checkout')\n  }\n}\n\nexport default apiClient","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport apiClient from '../../lib/ApiClient'\n\nexport const fetchCartItems = createAsyncThunk(\n  \"cartItems/fetchCartItems\",\n  async () => {\n    const cartItems = await apiClient.getCartItems()\n    return cartItems\n  }\n)\n\nexport const addItemToCart = createAsyncThunk(\n  \"cartItems/addItemToCart\",\n  async (product) => {\n    const newCartItem = await apiClient.addItemToCart(product)\n    return newCartItem\n  }\n)\n\nexport const checkout = createAsyncThunk(\n  \"cartItems/checkout\",\n  async () => {\n    await apiClient.checkout()\n  }\n)\n\nconst cartItemSlice = createSlice({\n  name: \"cartItems\",\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCartItems.fulfilled, (_, action) => {\n      return action.payload\n    })\n\n    builder.addCase(addItemToCart.fulfilled, (state, action) => {\n      const cartItemsSansAdded = state.filter(item => item.productId !== action.payload.item.productId)\n      return cartItemsSansAdded.concat(action.payload.item)\n    })\n\n    builder.addCase(checkout.fulfilled, () => {\n      return []\n    })\n  }\n})\n\nexport default cartItemSlice.reducer","import { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\n\nimport { fetchCartItems } from '../features/cartItems/cartItems'\nimport { checkout } from '../features/cartItems/cartItems'\n\nconst Cart = () => {\n  const dispatch = useDispatch()\n  const cartItems = useSelector(state => state.cartItems)\n\n  useEffect(() => {\n    dispatch(fetchCartItems())\n  }, [dispatch]);\n\n  const totalPrice = () => (\n    cartItems.reduce((accum, cartItem) => {\n      return accum + cartItem.price\n    }, 0)\n  )\n\n  const handleCheckout = async (event) => {\n    event.preventDefault()\n    dispatch(checkout())\n  }\n\n  return (\n    <div className=\"cart\">\n      <h2>Your Cart</h2>\n      <table className=\"cart-items\">\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Quantity</th>\n            <th>Price</th>\n          </tr>\n        </thead>\n        <tbody>\n          {cartItems.map(cartItem => (\n            <tr key={cartItem._id}>\n              <td>{cartItem.title}</td>\n              <td>{cartItem.quantity}</td>\n              <td>{cartItem.price}</td>\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n        <tr>\n          <td colSpan=\"3\" className=\"total\">Total: {totalPrice()}</td>\n        </tr>\n        </tfoot>\n      </table>\n      <a href='/' onClick={handleCheckout} className=\"button checkout\">Checkout</a>\n    </div>\n  )\n}\n\nexport default Cart;","import Cart from './Cart'\n\nconst Header = () => (\n  <header>\n      <h1>The Shop!</h1>\n      <Cart />\n    </header>\n);\n\nexport default Header;","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport apiClient from '../../lib/ApiClient'\n\nimport { addItemToCart } from '../cartItems/cartItems'\n\nexport const fetchProducts = createAsyncThunk(\n  \"products/fetchProducts\",\n  async () => {\n    const products = await apiClient.getProducts()\n    return products\n  }\n)\n\nexport const createProduct = createAsyncThunk(\n  \"products/createProduct\",\n  async ({ newProductInput, callback }) => {\n    const newProduct = await apiClient.createProduct(newProductInput)\n    if (callback) { callback() }\n    return newProduct\n  }\n)\n\nexport const updateProduct = createAsyncThunk(\n  \"products/updateProduct\",\n  async (updatedProductInput) => {\n    const updatedProduct = await apiClient.updateProduct(updatedProductInput)\n    return updatedProduct\n  }\n)\n\nexport const deleteProduct = createAsyncThunk(\n  \"products/deleteProduct\",\n  async (updatedProductId) => {\n    await apiClient.deleteProduct(updatedProductId)\n    return updatedProductId\n  }\n)\n\nconst productSlice = createSlice({\n  name: \"products\",\n  initialState: [],\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.fulfilled, (_, action) => {\n      return action.payload\n    })\n\n    builder.addCase(createProduct.fulfilled, (state, action) => {\n      state.push(action.payload)\n    })\n\n    builder.addCase(updateProduct.fulfilled, (state, action) => {\n      return state.map(product => product._id === action.payload._id ? action.payload : product)\n    })\n\n    builder.addCase(deleteProduct.fulfilled, (state, action) => {\n      return state.filter(product => product._id !== action.payload) \n    })\n\n    builder.addCase(addItemToCart.fulfilled, (state, action) => {\n      return state.map(product => product._id === action.payload.product._id ? action.payload.product : product)\n    })\n  }\n})\n\nexport default productSlice.reducer","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateProduct } from '../features/products/products'\n\nconst EditProductForm = ({ onEditFormClick, product }) => {\n  const [title, setTitle] = useState(product.title)\n  const [price, setPrice] = useState(product.price)\n  const [quantity, setQuantity] = useState(product.quantity)\n  const dispatch = useDispatch()\n\n  const resetEditForm = () => {\n    setTitle(product.title)\n    setPrice(product.price)\n    setQuantity(product.quantity)\n  }\n\n  const handleCancelEditForm = (event) => {\n    event.preventDefault()\n    onEditFormClick(resetEditForm)\n  }\n\n  const handleEditProduct = async (event) => {\n    event.preventDefault()\n    dispatch(updateProduct({ _id: product._id, title, price, quantity }))\n    // try {\n    //   const { data } = await axios.put(`/api/products/${product._id}`, { _id: product._id, title, price, quantity })\n\n    //   dispatch(productEdited(data))\n    // } catch(err) {\n    //   console.error(err)\n    // }\n  }\n\n  return (\n    <div className=\"edit-form\">\n      <h3>Edit Product</h3>\n      <form>\n        <div className=\"input-group\">\n          <label for=\"product-name\">Product Name</label>\n          <input\n            onChange={(event) => setTitle(event.target.value)}\n            type=\"text\" id=\"product-name\" value={title}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label for=\"product-price\">Price</label>\n          <input\n            onChange={(event) => setPrice(event.target.value)}\n            type=\"text\" id=\"product-price\" value={price}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label for=\"product-quantity\">Quantity</label>\n          <input onChange={(event) => setQuantity(event.target.value)}\n            type=\"text\" id=\"product-quantity\" value={quantity}\n          />\n        </div>\n\n        <div className=\"actions form-actions\">\n          <a href='/' onClick={handleEditProduct} className=\"button\">Update</a>\n          <a href='/' onClick={handleCancelEditForm} className=\"button\">Cancel</a>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default EditProductForm;","import { useDispatch } from 'react-redux'\nimport { deleteProduct } from '../features/products/products'\nimport { addItemToCart } from '../features/cartItems/cartItems'\n\nconst ProductDetail = ({ product, onEditFormClick }) => {\n  const dispatch = useDispatch()\n\n  const handleEditFormClick = (event) => {\n    event.preventDefault()\n    onEditFormClick()\n  }\n\n  const handleAddToCart = async (event) => {\n    event.preventDefault()\n    dispatch(addItemToCart({ productId: product._id, ...product }))\n  }\n\n  const handleDeleteProduct = async (event) => {\n    event.preventDefault()\n    dispatch(deleteProduct(product._id))\n  }\n\n  return (\n    <div className=\"product\">\n      <div className=\"product-details\">\n        <h3>{product.title}</h3>\n        <p className=\"price\">{product.price}</p>\n        <p className=\"quantity\">{product.quantity} left in stock</p>\n        <div className=\"actions product-actions\">\n          <a href='/' onClick={handleAddToCart} className=\"button add-to-cart\">Add to Cart</a>\n          <a href='/' onClick={handleEditFormClick} className=\"button edit\">Edit</a>\n        </div>\n        <a href='/' onClick={handleDeleteProduct} className=\"delete-button\"><span>X</span></a>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductDetail;","import EditProductForm from './EditProductForm'\nimport ProductDetail from './ProductDetail'\nimport { useState } from 'react'\n\nconst Product = ({ product }) => {\n  const [ showEditForm, setShowEditForm ] = useState(false)\n\n  const toggleEditFormClick = (callback) => {\n    setShowEditForm(!showEditForm)\n\n    if (callback) {\n      callback()\n    }\n  }\n\n  return (\n    <>\n      <ProductDetail\n        product={product}\n        onEditFormClick={toggleEditFormClick}\n        />\n      {showEditForm &&\n      <EditProductForm\n        onEditFormClick={toggleEditFormClick}\n        product={product}\n      />}\n    </>\n  )\n}\n\nexport default Product\n","import Product from \"./Product\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\n\nimport { fetchProducts } from '../features/products/products'\n\nconst Products = () => {\n  const dispatch = useDispatch()\n  const products = useSelector(state => state.products)\n\n  useEffect(() => {\n    dispatch(fetchProducts())\n\n    // const getProducts = async () => {\n    //   const productData = await axios.get('/api/products')\n    //   dispatch(productsReceived(productData.data))\n    // }\n    // getProducts()\n  }, [dispatch]);\n\n  return (\n    <div className=\"product-listing\">\n      <h2>Products</h2>\n      {products.map(product => (\n        <Product\n          key={product._id}\n          product={product}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default Products","import { useState } from 'react'\nimport { createProduct } from '../features/products/products'\nimport { useDispatch } from 'react-redux'\n\nconst AddProductForm = () => {\n  const [showAddProduct, setShowAddProduct] = useState(false)\n  const addFormClass = showAddProduct ? 'add-form visible' : 'add-form'\n  const [title, setTitle] = useState('')\n  const [price, setPrice] = useState(0)\n  const [quantity, setQuantity] = useState(0)\n  const dispatch = useDispatch()\n\n  const toggleAddFormButton = (event) => {\n    event.preventDefault()\n    setShowAddProduct(!showAddProduct)\n  }\n\n  const resetProductForm = () => {\n    setTitle('')\n    setPrice(0)\n    setQuantity(0)\n  }\n\n  const handleAddProduct = async (event) => {\n    event.preventDefault()\n    dispatch(createProduct({\n      newProductInput: { title, price, quantity },\n      callback: resetProductForm,\n    }\n    ))\n  }\n\n  return (\n    <div className={addFormClass}>\n      <p>\n        <a href='/' onClick={toggleAddFormButton} className=\"button add-product-button\">\n          Add A Product\n        </a>\n      </p>\n      <h3>Add Product</h3>\n      <form>\n        <div className=\"input-group\">\n          <label htmlFor=\"product-name\">Product Name</label>\n          <input\n            onChange={(event) => setTitle(event.target.value)}\n            type=\"text\"\n            id=\"product-name\"\n            value={title}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"product-price\">Price</label>\n          <input\n            onChange={(event) => setPrice(event.target.value)}\n            type=\"text\"\n            id=\"product-price\"\n            value={price}\n          />\n        </div>\n\n        <div className=\"input-group\">\n          <label htmlFor=\"product-quantity\">Quantity</label>\n          <input\n            onChange={(event) => setQuantity(event.target.value)}\n            type=\"text\"\n            id=\"product-quantity\"\n            value={quantity}\n          />\n        </div>\n\n        <div className=\"actions form-actions\">\n          <a href='/api/products' onClick={handleAddProduct} className=\"button\">Add</a>\n          <a href='/' onClick={toggleAddFormButton} className=\"button\">Cancel</a>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddProductForm","import React from 'react'\n\nimport Header from './Header'\nimport Products from './Products'\nimport AddProductForm from './AddProductForm'\n\nconst App = () => {\n  return (\n    <div id=\"app\">\n      <Header />\n      <main>\n        <Products />\n        <AddProductForm />\n      </main>\n    </div>\n  );\n};\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport productReducer from '../features/products/products'\nimport cartItemReducer from '../features/cartItems/cartItems'\n\nconst store = configureStore({\n  reducer: {\n    products: productReducer,\n    cartItems: cartItemReducer,\n  }\n})\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from 'react-redux'\nimport store from './lib/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}